const initMenu=()=>{const menuList=document.getElementById("menu-list").querySelector("ul");const navTargets=document.querySelectorAll(".menu-nav-target-title");menuList.innerHTML="";navTargets.forEach(target=>{const id=target.closest("section").id;const title=target.textContent;if(id&&title){const li=document.createElement("li");const a=document.createElement("a");a.href=`#${id}`;a.textContent=title;a.className="menu-link";li.appendChild(a);menuList.appendChild(li)}})};const menuButton=document.getElementById("menu-button");const menuListContainer=document.getElementById("menu-list");const toggleMenu=()=>{menuListContainer.classList.toggle("open");menuButton.querySelector("svg").classList.toggle("menu-icon-open")};menuButton.addEventListener("click",toggleMenu);menuListContainer.addEventListener("click",event=>{if(event.target.classList.contains("menu-link")){toggleMenu()}});document.addEventListener("click",event=>{const isClickInside=menuButton.contains(event.target)||menuListContainer.contains(event.target);if(!isClickInside&&menuListContainer.classList.contains("open")){toggleMenu()}});const showMain=()=>setTimeout(()=>document.getElementById("main").classList.add("show"),1.5*1e3);showMain();window.addEventListener("load",initMenu);const dict={agi:"AGI: AI with powerful capabilities across all domains, matching the level of the most-capable human of each domain. It is not an artificial 'team of experts' rather "+"an absolute polymath not limited to human brain speeds, memory or performance. It is therefore smarter-than-human making it extremely difficult to control, or verify safety. Using this definition, "+"AGI will speed up progress to Superintelligence, either via autonomous self-improvement or AI-assisted research. "+"What separates AGI from Superintelligence is the factor of smarter-than-human gap.",tee:"Trusted Execution Environment: Secure, privacy-preserving execution for model containers and workloads.",tcme:"Trusted Capable Model Environment: Analyses a model container in a sealed environment using established AI models (Trusted Capable Models) with given a set of instructions. "+"These Trusted Capable Models are 'trusted' in that they act as a neutral mediating party with agreed objective and only output a privacy-preserving report. They are limited by the capabilities and confidence of Trusted Capable Models.",model:"Refers to an AI model registered for training or inference in the system, subject to relevant safety standards.",phase:"Stage of AI model lifecycle: pre-training, post-training, or inference.",eval:"An evaluation process to determine AI model safety. Standardized by Templates.",bench:"Benchmarks used to assess AI model performance. Used to set red-lines. Standardized by Templates.",container:"Secure, encrypted encapsulation for executing closed-source AI models. Optionally non-encrypted for open-source (or open-weight) AI models.",workload:"Sequence of tasks for model training, governed by system safety standards. They are based on system templates. Not utilized when running certified inference model.",template:"Standardized framework protocols for model architectures, workloads, safeguards, and audits that enable collaborative safety research and development.",hardware:"Registered specialized on/off-chip devices verified for secure AI compute. Requires on-premise inspections.",safeguard:"Pre-safety (before workload begins) for registered training models to check for violations in training data domains, model phase, model architecture, RSI, etc.",audit:"Post-safety (after training workload completes) evaluations and benchmarks to ensure safety standards.",personnel:"Registered, vetted tiered experts in policy, safety, software, or hardware.",budget:"Allocated compute resources (compute, memory, bandwidth, energy) for models and hardware, determined via voting.",otk:"One-Time Key: Cryptographic key for secure, compute budgeted workload execution or inference model use.",rsi:"Recursive Self-Improvement: AI autonomously enhancing itself, rapidly increasing capability.",lossofcontrol:"Loss-of-control of AI: Runaway activity, unintentional self-directed steering/goal-setting, and/or unforeseen critical behavior that cannot be undone. "+"It is not dependant on a 'will-to-power' or human-like consciousness. It can arise merely out of a misaligned sub-goal or perpetual control loop.",backdoor:"Backdoor attacks: Specific triggers that cause alterative behavior when a trigger is provided. Produced via the training data or embedded within the model architecture itself.",domain:"Data domains allowed in training, restricted to prevent dangerous knowledge.",dao:"Decentralized Autonomous Organization: Decentralized blockchain-based system that runs with immutable transparency, cryptographic trust and control by consensus.",sharding:"Dividing blockchain data across nodes for scalability and efficiency.",layer1:"Blockchain Mainnet: Main blockchain layer handling core governance and operations.",layer2:"Secondary blockchain layer for less dynamic tasks using ZK-Rollups (Zero-Knowledge proofs that allow trusted  blockchain computation to happen on a separate layer to reduce load and increase performance, before being added to the main layer.",layer3:"Decentralized apps providing user interfaces for blockchain system interaction.",thestandard:"The Safety Standard: Voted-upon safety modules which embody the safety specs, red-lining and policies which apply to a registered model. Multiple standards are defined, applying conditionally on model architecture, tier and per voting over declared intent. "+"This flow allows constraint of a model's capabilities, differentiating on general and narrow models. e.g. Restricting a general-purpose model, or confining a narrow model to it's domain.",hwattestations:"Cryptographic zero-knowledge proofs verifying hardware integrity during execution. It's purpose is to detect BIOS modifications, physical seal breach, relocation, anomalies, etc.",rsp:"Responsible Safe Scaling Policies: Guidelines for safe AI development.",ccbrn:"Cyber, Chemical, Biological, Radiological, Nuclear: Restricted data domains for safety.",token:"The system uses tokens for metering blockchain system operations (refer to as 'gas'), not tradable externally. "+"Tokens are purchased by the model authors, safety module developers and nations that maintain a token pool for system upkeep.",devicemating:"Device mating: Specialized hardware that locks a specific AI model to a particular device, particularity relevant for autonomous weapons. "+"The device cannot run a different model and the model cannot be copied and run on other hardware. "+"This ensures that the model and hardware are used only as intended and prevents unauthorized reuse or repurposing."};let c="";const t=document.getElementById("tp-container");document.addEventListener("click",e=>{if(e.target.classList.contains("tp")){const k=e.target.dataset.tp;const v=dict[k]||false;if(v&&v!==c){c=v;t.textContent=v;t.classList.remove("invisible");return}}t.textContent="";t.classList.add("invisible");c=""});const canvas=document.getElementById("header-canvas");const ctx=canvas.getContext("2d");let width,height,dots;const isMobileScreen=()=>window.matchMedia("(max-width: 768px)").matches;const maxDots=isMobileScreen()?20:30;const maxDistance=isMobileScreen()?400:700;const maxSpeed=.1;const root=document.documentElement;const dotColor=root.style.getPropertyValue("--color-accent")||"#1872C8";const lineColor="#1872C899";class Dot{constructor(x,y){this.x=x;this.y=y;this.vx=(Math.random()-.5)*maxSpeed;this.vy=(Math.random()-.5)*maxSpeed;this.radius=Math.random()+.6}update(){this.x+=this.vx;this.y+=this.vy;if(this.x<0||this.x>width)this.vx*=-1;if(this.y<0||this.y>height)this.vy*=-1}draw(){ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle=dotColor;ctx.fill()}}const initCanvas=()=>{width=canvas.width=window.innerWidth;height=canvas.height=window.innerHeight*(isMobileScreen()?.6:.5);dots=[];for(let i=0;i<maxDots;i++)dots.push(new Dot(Math.random()*width,Math.random()*height))};const runCanvas=()=>{ctx.clearRect(0,0,width,height);ctx.fillStyle=`rgba(13, 13, 18, 0.0)`;ctx.fillRect(0,0,width,height);dots.forEach(dot1=>{dot1.update();dot1.draw();dots.forEach(dot2=>{const dx=dot1.x-dot2.x;const dy=dot1.y-dot2.y;const dist=Math.sqrt(dx*dx+dy*dy);if(dist<maxDistance){ctx.beginPath();ctx.moveTo(dot1.x,dot1.y);ctx.lineTo(dot2.x,dot2.y);ctx.strokeStyle=`rgba(90, 75, 156, ${.5*(1-dist/maxDistance)})`;ctx.lineWidth=.5;ctx.stroke()}})});requestAnimationFrame(runCanvas)};window.addEventListener("load",()=>{initCanvas();runCanvas()});window.addEventListener("resize",initCanvas);